<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.3 U (http://www.xmlspy.com) by NICOLAS ELSEN (ODYSSEY ASSET MANAGEMENT) -->
<xs:schema targetNamespace="http://www.odcgroup.com/GenericCOA" xmlns="http://www.odcgroup.com/GenericCOA" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:infra="http://www.odcgroup.com/InfraPMS" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://www.odcgroup.com/InfraPMS" schemaLocation="InfraPMS.xsd"/>
	<xs:element name="GenericCOA">
		<xs:annotation>
			<xs:documentation>Odyssey Transaction PMS Schema</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DataGroup" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
					</xs:annotation>

					<xs:complexType>

						<xs:sequence>

							<xs:element name="Adjustment" type="AdjustmentBaseObject" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Buy" type="BuyBaseObject" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Income" type="IncomeBaseObject" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Investment" type="InvestmentBaseObject" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Sell" type="SaleBaseObject" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Locking" type="LockingBaseObject" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Withdrawal" type="WithdrawalBaseObject" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>

					</xs:complexType>

				</xs:element>

			</xs:sequence>

			<xs:attribute name="output" type="xs:string" use="optional"/>

			<xs:attribute name="description" type="xs:string" use="optional"/>

			<xs:attribute name="mode" type="infra:ModeEnum" use="optional"/>

			<xs:attributeGroup ref="infra:businessEntity_AttrGrp"/>

		</xs:complexType>
	</xs:element>
	<xs:complexType name="FeesTaxesCounter">

		<xs:sequence>

			<xs:element name="amount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Amount of the corresponding 'Balance Position Type', explaining the difference between the Operation Gross Amount and the Opertion Net Amount.
The effect of this amount in terms of generated Positions and Balance Positions depends on the nature of the corresponding Balance Position Type.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bp_1_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the corresponding BP amount.
This currency may be one of the following : operation currency, instrument currency, portfolio currency, system currency, account currency, account 2 currency, account 3 currency, or trade currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bp_1_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Balance Position Type' of a Fees   Taxes item.
The effect of the amount corresponding to this 'Balance Postion Type' depends on the nature of the referenced  'Balance Position Type'.
If its nature is 'Operation Fee' or 'Operation Tax' and that its rank is comprised between 1 and 10, the corresponding amount will be stored in the 'Income Balance Position' and will explain the difference between the 'Position Gross Amount' and the 'Position Net Amount' in it.
In any other case, the operation will generate a separate balance position having this 'Balance Position Type' and a 'Position Gross amount' equal the the amount corresponding to it in the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bp_1_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="SaleBaseObject">

		<xs:sequence>

			<xs:element name="account1" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 2 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 2 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a third cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 3 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account3_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 3 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 3 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the third account, expressed in the Account 3 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount of accrued interest.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestCounter" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'Balance Position Type' of the 'paid accrued interest' or of the 'received accrued interest'.
This Balance Position Type is associated to the amount of accrued interest paid/received in case of a movement in an instrument generated by the following natures of operation: 'Buy Operation', 'Sell Operation', 'Investment Operation', 'Withdrawal Operation', 'Transfert Operation', and 'Adjustment Operation'.
When the amount corresponding to the accrued interest is different from 0, these operations generate a balance position having the specified balance position type. This movement is either positive or negative, depending on the operation nature (positive for 'Buy Operation',  'Investment Operation','Transfert Operation', and 'Adjustment Operation', negative for 'Sell Operation' and 'Withdrawal Operation').

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_bp_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="coaReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'code' of the 'event' that has, possibly, generated the operation.
This information is useful to control the automatic generation of operations on the basis of instrument events.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  event_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="commonReference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute is used by Triple'A Plus T24 Interface in the context of the structured product definition management and with the flow management of the T24 SY module. It is stored for information purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  common_ref_c - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="communication" type="CommunicationObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  communication - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate action event's ex_date is filled in this field. If this field is filled, the date is used in the Fusion's sleeve processing to split the quantity to all eligible portfolios in the hierarchy based on the qualifying holdings as of the ex_date.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  coa_ex_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  notepad - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria1" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a sub nature for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria2" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 2' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 2' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat2_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria3" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 3' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 3' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat3_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversalIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'reversal' when an operation is the reversal of another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversedTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'reversed' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="security" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="securityCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the instrument currency (i.e. the reference currency of the 'instrument'). This amount is based on the 'Operation Net Amount' and the various Exchange Rates.
This amount is computed as follows :
'Operation Net Amount'  * 'Operation Exchange Rate' / 'Instrument Exchange Rate'

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="securityCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceSystemCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="splitPortfolio" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is set to 'Yes' in the accounted operations, the quantity is split between the portfolios in the hierarchy.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_split_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0"/>

						<xs:enumeration value="1"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="status" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="supplementaryAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to indicates an absolute amount (i.e. not related to a quantity) that has to be added to the 'operation gross amount'.
This information may be useful in some operations where no quantity is specified.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  suppl_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyGrossAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gross amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income').
This amount is computed as follows :
( 'Quantity' * 'Contract Size' * 'Price' ) + 'Supplemetary Amount'

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_gross_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income'). This amount is computed as the 'Operation Gross Amount' plus the accrued interest and  the sum of the Fees   Taxes Amounts (i.e. the BPs Amounts).
This amount is computed as follows :
'Operation Gross Amount' + 'Accrued Interest Amount' + SUM('BP1 Amount', 'BP2 Amount', ...,  'BP10 Amount')

If there is a mismatch between the provided 'Operation Net Amount' and the result of the preceding computation, the difference is automatically affected to the 10th balance position amount, which contains any rounding error. This garantees that the operation is always 'balanced'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradePrice" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionFeesTaxesCounter" type="FeesTaxesCounter" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:appinfo>Entity : balance_pos</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeInstrument" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by OCS in order to group together similar operations.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  transaction_nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  TOTO - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

		<xs:attribute name="description" type="xs:string" use="optional"/>

		<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

	</xs:complexType>
	<xs:complexType name="IncomeBaseObject">

		<xs:sequence>

			<xs:element name="account1" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1CcyIncomeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2CcyIncomeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 2 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 2 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a third cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 3 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account3_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3CcyIncomeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 3 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 3 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the third account, expressed in the Account 3 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="coaReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'code' of the 'event' that has, possibly, generated the operation.
This information is useful to control the automatic generation of operations on the basis of instrument events.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  event_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="commonReference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute is used by Triple'A Plus T24 Interface in the context of the structured product definition management and with the flow management of the T24 SY module. It is stored for information purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  common_ref_c - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="communication" type="CommunicationObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  communication - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate action event's ex_date is filled in this field. If this field is filled, the date is used in the Fusion's sleeve processing to split the quantity to all eligible portfolios in the hierarchy based on the qualifying holdings as of the ex_date.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  coa_ex_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="income" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="incomeCcyGrossAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gross amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income').
This amount is computed as follows :
( 'Quantity' * 'Contract Size' * 'Price' ) + 'Supplemetary Amount'

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_gross_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="incomeCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income'). This amount is computed as the 'Operation Gross Amount' plus the accrued interest and  the sum of the Fees   Taxes Amounts (i.e. the BPs Amounts).
This amount is computed as follows :
'Operation Gross Amount' + 'Accrued Interest Amount' + SUM('BP1 Amount', 'BP2 Amount', ...,  'BP10 Amount')

If there is a mismatch between the provided 'Operation Net Amount' and the result of the preceding computation, the difference is automatically affected to the 10th balance position amount, which contains any rounding error. This garantees that the operation is always 'balanced'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="incomeCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="incomeCounter" type="infra:Identifier" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reference to the balance position type of the balance position that is generated by the operation.
This field is mandatory for the following nature of operation: 'tranfert', 'investment', 'withdrawal', 'income', 'ft', 'share isssue', 'share redemption'.
In each, the constraint over the nature of the referenced balance position type depends on the nature of the operation (see the description of the 'bp type' field for each operation nature).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bp_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="incomeCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="nominalOrUnit" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  notepad - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria1" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a sub nature for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversalIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'reversal' when an operation is the reversal of another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversedTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'reversed' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="security" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="securityCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the instrument currency (i.e. the reference currency of the 'instrument'). This amount is based on the 'Operation Net Amount' and the various Exchange Rates.
This amount is computed as follows :
'Operation Net Amount'  * 'Operation Exchange Rate' / 'Instrument Exchange Rate'

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="securityCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceSystemCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="splitPortfolio" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is set to 'Yes' in the accounted operations, the quantity is split between the portfolios in the hierarchy.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_split_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0"/>

						<xs:enumeration value="1"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="status" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionFeesTaxesCounter" type="FeesTaxesCounter" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:appinfo>Entity : balance_pos</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeInstrument" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by OCS in order to group together similar operations.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  transaction_nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  TOTO - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

		<xs:attribute name="description" type="xs:string" use="optional"/>

		<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

	</xs:complexType>
	<xs:complexType name="AdjustmentBaseObject">

		<xs:sequence>

			<xs:element name="account1" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1CcyoldSecCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2CcyoldSecCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 2 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 2 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a third cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 3 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account3_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3CcyoldSecCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 3 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 3 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the third account, expressed in the Account 3 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount of accrued interest.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestCounter" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'Balance Position Type' of the 'paid accrued interest' or of the 'received accrued interest'.
This Balance Position Type is associated to the amount of accrued interest paid/received in case of a movement in an instrument generated by the following natures of operation: 'Buy Operation', 'Sell Operation', 'Investment Operation', 'Withdrawal Operation', 'Transfert Operation', and 'Adjustment Operation'.
When the amount corresponding to the accrued interest is different from 0, these operations generate a balance position having the specified balance position type. This movement is either positive or negative, depending on the operation nature (positive for 'Buy Operation',  'Investment Operation','Transfert Operation', and 'Adjustment Operation', negative for 'Sell Operation' and 'Withdrawal Operation').

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_bp_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="adjustmentCounter" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the balance position type of the balance position that is adjustedted by the adjustment operation/portfolio transfer operation, for the adjusted instrument.
This reference is optional and, if referenced, any bp type may be referenced.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_bp_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="adjustmentNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the 'nature' of the adjustment.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="adjustmentPortfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the instrument is transferred.
This information is mandatory, and the 'to' portfolio must be different from the 'from' portfolio.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="adjBoPortfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If field adj_portfolio_id holds identifier of sleeve portfolio, then this field holds the corresponding back office portfolio id.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_bo_ptf_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boPortfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If the operation is on a sleeve portfolio (portfolio_id), this field holds the identifier of the back office portfolio that is associated to the input sleeve portfolio_id.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bo_ptf_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="coaReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'code' of the 'event' that has, possibly, generated the operation.
This information is useful to control the automatic generation of operations on the basis of instrument events.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  event_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="commonReference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute is used by Triple'A Plus T24 Interface in the context of the structured product definition management and with the flow management of the T24 SY module. It is stored for information purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  common_ref_c - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="communication" type="CommunicationObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  communication - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate action event's ex_date is filled in this field. If this field is filled, the date is used in the Fusion's sleeve processing to split the quantity to all eligible portfolios in the hierarchy based on the qualifying holdings as of the ex_date.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  coa_ex_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the adjusted instrument position. By default, this quantity is equal to 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the adjusted instrument. Valid only for the 'adjustment'/'portfolio transfer' operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurityCcyPositionCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Adjusted Instrument Position Currency. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_pos_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurityDepositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the adjusted instrument position.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurityNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the adjusted position currency. This amount is based on the 'Operation Net Amount' and the various Exchange Rates.
This amount is computed as follows :
'Operation Net Amount'  * 'Operation Exchange Rate' / 'Adjusted Position Exchange Rate'

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_pos_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurityPositionCriteria1" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information allowing to specify a position sub nature for the adjusted instrument. Its purpose is to be able to manage sub-portfolio's in Triple'A.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurityPositionCriteria2" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information allowing to specify a position sub nature 2 for the adjusted instrument. Its purpose is to be able to manage sub-portfolio's in Triple'A.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_sub_pos_nat2_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurityPositionCriteria3" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information allowing to specify a position sub nature 3 for the adjusted instrument. Its purpose is to be able to manage sub-portfolio's in Triple'A.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_sub_pos_nat3_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="newSecurityPositionCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the position currency of the adjusted instrument.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'instrument' of the  operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  adj_pos_curr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  notepad - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldCcyGrossAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gross amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income').
This amount is computed as follows :
( 'Quantity' * 'Contract Size' * 'Price' ) + 'Supplemetary Amount'

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_gross_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income'). This amount is computed as the 'Operation Gross Amount' plus the accrued interest and  the sum of the Fees   Taxes Amounts (i.e. the BPs Amounts).
This amount is computed as follows :
'Operation Gross Amount' + 'Accrued Interest Amount' + SUM('BP1 Amount', 'BP2 Amount', ...,  'BP10 Amount')

If there is a mismatch between the provided 'Operation Net Amount' and the result of the preceding computation, the difference is automatically affected to the 10th balance position amount, which contains any rounding error. This garantees that the operation is always 'balanced'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldPrice" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldSecurity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldSecurityDepositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldSecurityPositionCriteria1" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a sub nature for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldSecurityPositionCriteria2" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 2' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 2' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat2_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldSecurityPositionCriteria3" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 3' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 3' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat3_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldSecurityPositionCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="paymentDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the date on which the cash settlement will occur or has occurred.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  payment_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="paymentStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the status of the settlement of the cash payment transaction. The cash settlement status can have the following values. 

? Expected: Value for operation before the accounted status.
? Contractual: The transaction undergoes Contractual Settlement, thus it is assumed to be settled when it is accounted.
? Actual ? Pending: The transaction undergoes Actual Settlement, and the settlement is still outstanding.
? Actual ? Occurred: The transaction undergoes Actual Settlement, and the settlement has taken place.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  payment_status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

						<xs:simpleType>

							<xs:restriction base="xs:unsignedByte">

								<xs:enumeration value="1"/>

								<xs:enumeration value="2"/>

								<xs:enumeration value="3"/>

								<xs:enumeration value="4"/>

							</xs:restriction>

						</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversalIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'reversal' when an operation is the reversal of another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversedTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'reversed' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="settlementDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the date on which the securities settlement will occur or has occurred.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  settlement_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the status of the settlement of the securities trade transaction. The securities settlement status can have the following values. 

? Expected: Value for operation before the accounted status.
? Contractual: The transaction undergoes Contractual Settlement, thus it is assumed to be settled when it is accounted.
? Actual ? Pending: The transaction undergoes Actual Settlement, and the settlement is still outstanding.
? Actual ? Occurred: The transaction undergoes Actual Settlement, and the settlement has taken place.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  settle_status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

						<xs:simpleType>

							<xs:restriction base="xs:unsignedByte">

								<xs:enumeration value="1"/>

								<xs:enumeration value="2"/>

								<xs:enumeration value="3"/>

								<xs:enumeration value="4"/>

							</xs:restriction>

						</xs:simpleType>

			</xs:element>

			<xs:element name="sourceSystemCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="splitPortfolio" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is set to 'Yes' in the accounted operations, the quantity is split between the portfolios in the hierarchy.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_split_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0"/>

						<xs:enumeration value="1"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="status" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="supplementaryAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to indicates an absolute amount (i.e. not related to a quantity) that has to be added to the 'operation gross amount'.
This information may be useful in some operations where no quantity is specified.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  suppl_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionFeesTaxesCounter" type="FeesTaxesCounter" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:appinfo>Entity : balance_pos</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeInstrument" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by OCS in order to group together similar operations.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  transaction_nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  TOTO - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

		<xs:attribute name="description" type="xs:string" use="optional"/>

		<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

	</xs:complexType>
	<xs:complexType name="InvestmentBaseObject">

		<xs:sequence>

			<xs:element name="account1" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 2 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 2 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a third cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 3 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account3_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 3 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 3 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the third account, expressed in the Account 3 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount of accrued interest.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestCounter" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'Balance Position Type' of the 'paid accrued interest' or of the 'received accrued interest'.
This Balance Position Type is associated to the amount of accrued interest paid/received in case of a movement in an instrument generated by the following natures of operation: 'Buy Operation', 'Sell Operation', 'Investment Operation', 'Withdrawal Operation', 'Transfert Operation', and 'Adjustment Operation'.
When the amount corresponding to the accrued interest is different from 0, these operations generate a balance position having the specified balance position type. This movement is either positive or negative, depending on the operation nature (positive for 'Buy Operation',  'Investment Operation','Transfert Operation', and 'Adjustment Operation', negative for 'Sell Operation' and 'Withdrawal Operation').

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_bp_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="coaReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'code' of the 'event' that has, possibly, generated the operation.
This information is useful to control the automatic generation of operations on the basis of instrument events.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  event_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="commonReference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute is used by Triple'A Plus T24 Interface in the context of the structured product definition management and with the flow management of the T24 SY module. It is stored for information purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  common_ref_c - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="communication" type="CommunicationObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  communication - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate action event's ex_date is filled in this field. If this field is filled, the date is used in the Fusion's sleeve processing to split the quantity to all eligible portfolios in the hierarchy based on the qualifying holdings as of the ex_date.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  coa_ex_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  notepad - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria1" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a sub nature for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria2" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 2' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 2' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat2_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria3" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 3' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 3' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat3_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversalIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'reversal' when an operation is the reversal of another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversedTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'reversed' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="security" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceSystemCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="splitPortfolio" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is set to 'Yes' in the accounted operations, the quantity is split between the portfolios in the hierarchy.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_split_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0"/>

						<xs:enumeration value="1"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="status" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="supplementaryAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to indicates an absolute amount (i.e. not related to a quantity) that has to be added to the 'operation gross amount'.
This information may be useful in some operations where no quantity is specified.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  suppl_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyGrossAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gross amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income').
This amount is computed as follows :
( 'Quantity' * 'Contract Size' * 'Price' ) + 'Supplemetary Amount'

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_gross_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income'). This amount is computed as the 'Operation Gross Amount' plus the accrued interest and  the sum of the Fees   Taxes Amounts (i.e. the BPs Amounts).
This amount is computed as follows :
'Operation Gross Amount' + 'Accrued Interest Amount' + SUM('BP1 Amount', 'BP2 Amount', ...,  'BP10 Amount')

If there is a mismatch between the provided 'Operation Net Amount' and the result of the preceding computation, the difference is automatically affected to the 10th balance position amount, which contains any rounding error. This garantees that the operation is always 'balanced'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradePrice" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionFeesTaxesCounter" type="FeesTaxesCounter" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:appinfo>Entity : balance_pos</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeInstrument" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by OCS in order to group together similar operations.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  transaction_nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  TOTO - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

		<xs:attribute name="description" type="xs:string" use="optional"/>

		<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

	</xs:complexType>
	<xs:complexType name="WithdrawalBaseObject">

		<xs:sequence>

			<xs:element name="account1" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 2 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 2 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a third cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 3 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account3_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 3 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 3 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the third account, expressed in the Account 3 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount of accrued interest.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestCounter" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'Balance Position Type' of the 'paid accrued interest' or of the 'received accrued interest'.
This Balance Position Type is associated to the amount of accrued interest paid/received in case of a movement in an instrument generated by the following natures of operation: 'Buy Operation', 'Sell Operation', 'Investment Operation', 'Withdrawal Operation', 'Transfert Operation', and 'Adjustment Operation'.
When the amount corresponding to the accrued interest is different from 0, these operations generate a balance position having the specified balance position type. This movement is either positive or negative, depending on the operation nature (positive for 'Buy Operation',  'Investment Operation','Transfert Operation', and 'Adjustment Operation', negative for 'Sell Operation' and 'Withdrawal Operation').

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_bp_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="coaReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'code' of the 'event' that has, possibly, generated the operation.
This information is useful to control the automatic generation of operations on the basis of instrument events.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  event_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="commonReference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute is used by Triple'A Plus T24 Interface in the context of the structured product definition management and with the flow management of the T24 SY module. It is stored for information purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  common_ref_c - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="communication" type="CommunicationObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  communication - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate action event's ex_date is filled in this field. If this field is filled, the date is used in the Fusion's sleeve processing to split the quantity to all eligible portfolios in the hierarchy based on the qualifying holdings as of the ex_date.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  coa_ex_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  notepad - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria1" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a sub nature for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria2" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 2' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 2' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat2_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria3" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 3' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 3' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat3_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversalIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'reversal' when an operation is the reversal of another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversedTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'reversed' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="security" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceSystemCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="splitPortfolio" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is set to 'Yes' in the accounted operations, the quantity is split between the portfolios in the hierarchy.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_split_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0"/>

						<xs:enumeration value="1"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="status" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="supplementaryAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to indicates an absolute amount (i.e. not related to a quantity) that has to be added to the 'operation gross amount'.
This information may be useful in some operations where no quantity is specified.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  suppl_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyGrossAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gross amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income').
This amount is computed as follows :
( 'Quantity' * 'Contract Size' * 'Price' ) + 'Supplemetary Amount'

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_gross_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income'). This amount is computed as the 'Operation Gross Amount' plus the accrued interest and  the sum of the Fees   Taxes Amounts (i.e. the BPs Amounts).
This amount is computed as follows :
'Operation Gross Amount' + 'Accrued Interest Amount' + SUM('BP1 Amount', 'BP2 Amount', ...,  'BP10 Amount')

If there is a mismatch between the provided 'Operation Net Amount' and the result of the preceding computation, the difference is automatically affected to the 10th balance position amount, which contains any rounding error. This garantees that the operation is always 'balanced'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradePrice" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionFeesTaxesCounter" type="FeesTaxesCounter" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:appinfo>Entity : balance_pos</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeInstrument" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by OCS in order to group together similar operations.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  transaction_nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  TOTO - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

		<xs:attribute name="description" type="xs:string" use="optional"/>

		<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

	</xs:complexType>
	<xs:complexType name="BuyBaseObject">

		<xs:sequence>

			<xs:element name="account1" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account1NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 2 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 2 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account2NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a third cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 3 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account3_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3CcyTradeCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account 3 Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account 3 Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="account3NetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the third account, expressed in the Account 3 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc3_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount of accrued interest.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accruedInterestCounter" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'Balance Position Type' of the 'paid accrued interest' or of the 'received accrued interest'.
This Balance Position Type is associated to the amount of accrued interest paid/received in case of a movement in an instrument generated by the following natures of operation: 'Buy Operation', 'Sell Operation', 'Investment Operation', 'Withdrawal Operation', 'Transfert Operation', and 'Adjustment Operation'.
When the amount corresponding to the accrued interest is different from 0, these operations generate a balance position having the specified balance position type. This movement is either positive or negative, depending on the operation nature (positive for 'Buy Operation',  'Investment Operation','Transfert Operation', and 'Adjustment Operation', negative for 'Sell Operation' and 'Withdrawal Operation').

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accr_bp_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="coaReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'code' of the 'event' that has, possibly, generated the operation.
This information is useful to control the automatic generation of operations on the basis of instrument events.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  event_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="commonReference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute is used by Triple'A Plus T24 Interface in the context of the structured product definition management and with the flow management of the T24 SY module. It is stored for information purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  common_ref_c - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="communication" type="CommunicationObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  communication - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate action event's ex_date is filled in this field. If this field is filled, the date is used in the Fusion's sleeve processing to split the quantity to all eligible portfolios in the hierarchy based on the qualifying holdings as of the ex_date.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  coa_ex_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  notepad - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria1" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a sub nature for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria2" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 2' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 2' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat2_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria3" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 3' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 3' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat3_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversalIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'reversal' when an operation is the reversal of another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversedTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'reversed' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="security" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="securityCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the instrument currency (i.e. the reference currency of the 'instrument'). This amount is based on the 'Operation Net Amount' and the various Exchange Rates.
This amount is computed as follows :
'Operation Net Amount'  * 'Operation Exchange Rate' / 'Instrument Exchange Rate'

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="securityCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceSystemCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="splitPortfolio" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is set to 'Yes' in the accounted operations, the quantity is split between the portfolios in the hierarchy.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_split_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0"/>

						<xs:enumeration value="1"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="status" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="supplementaryAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to indicates an absolute amount (i.e. not related to a quantity) that has to be added to the 'operation gross amount'.
This information may be useful in some operations where no quantity is specified.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  suppl_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyGrossAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gross amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income').
This amount is computed as follows :
( 'Quantity' * 'Contract Size' * 'Price' ) + 'Supplemetary Amount'

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_gross_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount of an operation, expressed in the operation currency (i.e. the currency of the 'price/'unit income'). This amount is computed as the 'Operation Gross Amount' plus the accrued interest and  the sum of the Fees   Taxes Amounts (i.e. the BPs Amounts).
This amount is computed as follows :
'Operation Gross Amount' + 'Accrued Interest Amount' + SUM('BP1 Amount', 'BP2 Amount', ...,  'BP10 Amount')

If there is a mismatch between the provided 'Operation Net Amount' and the result of the preceding computation, the difference is automatically affected to the 10th balance position amount, which contains any rounding error. This garantees that the operation is always 'balanced'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradePrice" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionFeesTaxesCounter" type="FeesTaxesCounter" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:appinfo>Entity : balance_pos</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeInstrument" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by OCS in order to group together similar operations.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  transaction_nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  TOTO - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

		<xs:attribute name="description" type="xs:string" use="optional"/>

		<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

	</xs:complexType>
	<xs:complexType name="CommunicationObject">

		<xs:sequence>

			<xs:element name="date" type="xs:date">
				<xs:annotation>
					<xs:documentation>Date of the communication.
</xs:documentation>
					<xs:appinfo>Entity : communication - Attribute :  comm_date_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to the client who initiated the instructions or the person (trader or back-office operator) for whom the instructions are intended.
</xs:documentation>
					<xs:appinfo>Entity : communication - Attribute :  comm_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceType" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Indicates the source or destination of the instructions communicated. (i.e. Client, Trader, Back-Office)
</xs:documentation>
					<xs:appinfo>Entity : communication - Attribute :  comm_src_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="text" type="xs:string">
				<xs:annotation>
					<xs:documentation>Text of the instructions or message.
</xs:documentation>
					<xs:appinfo>Entity : communication - Attribute :  comm_text_t - Datatype : note_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to the means used to transmit the instructions. (i.e. Fax, Telephone, Email, Post)
</xs:documentation>
					<xs:appinfo>Entity : communication - Attribute :  comm_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="CashPortfolioObject">

		<xs:sequence>

			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash portfolio, if the latter is provided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_pf_curr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the Exchange Rate between the  Portfolio Reference Currency and the Reference Currency of the Cash Portfolio on which the various cash accounts are debited/credited.
This information is useful only if the 'Cash Portfolio' ('cash_portfolio_id') is different from NULL and from the main portfolio of the operation, whch means that the cash counterpart of the operation is debited/credited in a portfolio different from the portfolio of the operation.
This is possible only for the operation where there is possibility to debit/credit a cash account (buy, sell, income,...). 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_pf_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LockingBaseObject">

		<xs:sequence>

			<xs:element name="accountingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="coaReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'code' of the 'event' that has, possibly, generated the operation.
This information is useful to control the automatic generation of operations on the basis of instrument events.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  event_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="commonReference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This attribute is used by Triple'A Plus T24 Interface in the context of the structured product definition management and with the flow management of the T24 SY module. It is stored for information purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  common_ref_c - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="communication" type="CommunicationObject" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  communication - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositaryAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Corporate action event's ex_date is filled in this field. If this field is filled, the date is used in the Fusion's sleeve processing to split the quantity to all eligible portfolios in the hierarchy based on the qualifying holdings as of the ex_date.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  coa_ex_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="lockingTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'locked' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  lock_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:minLength value="0"/>

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="lockingType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'type' of locking.
Locking has not yet been developed.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  lock_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="lockingUnlocking" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'locking' when an operation locks another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  lock_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  notepad - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria1" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a sub nature for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria2" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 2' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 2' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat2_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionCriteria3" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates a 'sub nature 3' for a position.
This information is useful when the user wants to distinct positions belongings to various sub-portfolios of a same portfolio. In that case, positions with a different 'sub nature 3' will never fuse together.
This can be considered as a supplementary and user-definable criteria allowing to differentiate positions, in addition to the application standard ones (portfolio/instrument/deposit/position currency).
The default value for this field is '0' =  None .
Permitted values may be parametrised on site.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_pos_nat3_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversalIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to specify the nature of the 'reversal' when an operation is the reversal of another.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="reversedTransactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to reference the 'code' of an operation that is 'reversed' by the current operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  revers_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="security" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceSystemCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="splitPortfolio" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this flag is set to 'Yes' in the accounted operations, the quantity is split between the portfolios in the hierarchy.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_split_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0"/>

						<xs:enumeration value="1"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="status" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="tradeCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:token">

						<xs:maxLength value="255"/>

						<xs:minLength value="0"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeInstrument" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is used by OCS in order to group together similar operations.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  transaction_nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="validityDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for position in generic 'money market' instrument, the date from which the accrued interest must be computed.
This date is optionnal. If it is not provided, the computation of accrued interest starts on the 'value date' of the instrument position.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  lock_limit_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  TOTO - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

		<xs:attribute name="description" type="xs:string" use="optional"/>

		<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

	</xs:complexType>
</xs:schema>
