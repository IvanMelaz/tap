<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by ODYSSEY ASSET MANAGEMENT (ODYSSEY ASSET MANAGEMENT) -->
<xs:schema targetNamespace="http://www.odcgroup.com/F2B_MM_FX" xmlns="http://www.odcgroup.com/F2B_MM_FX" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:infra="http://www.odcgroup.com/InfraPMS" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://www.odcgroup.com/InfraPMS" schemaLocation="InfraPMS.xsd"/>
	<xs:element name="F2B_MM_FX">
		<xs:annotation>
			<xs:documentation>Odyssey Transaction PMS Schema</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DataGroup" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
					</xs:annotation>

					<xs:complexType>

						<xs:sequence>

							<xs:element name="DepositLoan" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>

								<xs:complexType>

									<xs:choice>

										<xs:element name="Deposit" type="DepositF2BTransaction">
											<xs:annotation>
												<xs:appinfo>Entity : deposit</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Loan" type="LoanF2BTransaction">
											<xs:annotation>
											</xs:annotation>
										</xs:element>
									</xs:choice>

									<xs:attribute name="eventIdentifier" type="xs:unsignedLong"/>

									<xs:attribute name="eventStatus" type="xs:unsignedByte"/>

									<xs:attribute name="description" type="xs:string" use="optional"/>

									<xs:attribute name="priority" type="xs:decimal"/>

									<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

								</xs:complexType>

							</xs:element>

							<xs:element name="ForexForward" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>

								<xs:complexType>

									<xs:choice>

										<xs:element name="Forward" type="ForwardF2BTransaction">
											<xs:annotation>
												<xs:appinfo>Entity : instrument</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="ForexSpot" type="ForexSpotF2BTransaction">
											<xs:annotation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ForexSwap" type="ForexSwapF2BTransaction">
											<xs:annotation>
											</xs:annotation>
										</xs:element>
									</xs:choice>

									<xs:attribute name="eventIdentifier" type="xs:unsignedLong"/>

									<xs:attribute name="eventStatus" type="xs:unsignedByte"/>

									<xs:attribute name="description" type="xs:string" use="optional"/>

									<xs:attribute name="priority" type="xs:decimal"/>

									<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

								</xs:complexType>

							</xs:element>

							<xs:element name="Cash" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
								</xs:annotation>

								<xs:complexType>

									<xs:complexContent>

										<xs:extension base="CashF2BTransaction">

											<xs:attribute name="eventIdentifier" type="xs:unsignedLong"/>

											<xs:attribute name="eventStatus" type="xs:unsignedByte"/>

											<xs:attribute name="description" type="xs:string" use="optional"/>

											<xs:attribute name="priority" type="xs:decimal"/>

											<xs:attribute name="sequenceNumber" type="xs:long" use="optional"/>

										</xs:extension>

									</xs:complexContent>

								</xs:complexType>

							</xs:element>

						</xs:sequence>

					</xs:complexType>

				</xs:element>

			</xs:sequence>

			<xs:attribute name="output" type="xs:string" use="optional"/>

			<xs:attribute name="description" type="xs:string" use="optional"/>

			<xs:attribute name="mode" type="infra:ModeEnum" use="optional"/>

			<xs:attributeGroup ref="infra:businessEntity_AttrGrp"/>

		</xs:complexType>
	</xs:element>
	<xs:complexType name="ForexSpotPurchaseAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotSaleAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotPurchaseRequestObject">

		<xs:sequence>

			<xs:element name="boAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bo_account - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boCashAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bo_cash_acct - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boPortfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bo_ptf code_t - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSwapPurchaseRequestObject">

		<xs:sequence>

			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="marginPips" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="paidCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="paidCurrencyAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="paidCurrencyAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapContract" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapCurrencyAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSwapSaleRequestObject">

		<xs:sequence>

			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="marginPips" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrencyAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited by the operation.
This cash account allows to debit a second cash account for the same operation. This account may have a currency different from the main one. 
This information is mandatory if the 'account 2 net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account2_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrencyAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited/credited on the second account, expressed in the Account 2 Currency.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapContract" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="swapCurrencyAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotSaleRequestObject">

		<xs:sequence>

			<xs:element name="boAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : event - Attribute :  bo_account - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boCashAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : event - Attribute :  bo_cash_acct - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boPortfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : event - Attribute :  bo_ptf code_t - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotCancelPurchaseObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_old_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotCancelSaleObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_old_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Account Currency. This exchange rate is expressed as the unit ratio between the Operation Net Amount and the Account Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotCancellationPurchaseAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotCancellationSaleAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Operation Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Operation Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotCancelOkObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForexSpotF2BTransaction">

		<xs:choice>

			<xs:element name="OrderLifeCycle">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="purchaseRequest" type="ForexSpotPurchaseRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleRequest" type="ForexSpotSaleRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="purchaseAcknowledgment" type="ForexSpotPurchaseAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleAcknowledgment" type="ForexSpotSaleAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

			<xs:element name="Cancellation">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="purchaseRequest" type="ForexSpotCancelPurchaseObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleRequest" type="ForexSpotCancelSaleObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="purchaseAcknowledgment" type="ForexSpotCancellationPurchaseAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleAcknowledgment" type="ForexSpotCancellationSaleAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CancelOk" type="ForexSpotCancelOkObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

		</xs:choice>

	</xs:complexType>
	<xs:complexType name="ForexSwapF2BTransaction">

		<xs:choice>

			<xs:element name="OrderLifeCycle">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="purchaseRequest" type="ForexSwapPurchaseRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleRequest" type="ForexSwapSaleRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

		</xs:choice>

	</xs:complexType>
	<xs:complexType name="ForwardF2BTransaction">

		<xs:choice>

			<xs:element name="OrderLifeCycle">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="purchaseRequest" type="ForwardPurchaseRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleRequest" type="ForwardSaleRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="purchaseAcknowledgment" type="ForwardPurchaseAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleAcknowledgment" type="ForwardSaleAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

			<xs:element name="Cancellation">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="purchaseRequest" type="ForwardCancelPurchaseObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleRequest" type="ForwardCancelSaleObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="purchaseAcknowledgment" type="ForwardPurchaseCancellationAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="saleAcknowledgment" type="ForwardSaleCancellationAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CancelOk" type="ForwardCancelOkObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

		</xs:choice>

	</xs:complexType>
	<xs:complexType name="ForwardPurchaseAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : notepad</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardSaleAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : notepad</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardPurchaseRequestObject">

		<xs:sequence>

			<xs:element name="autoClosing" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_auto_closing_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fixingDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The fixing date is the date at which the difference between the prevailing spot market rate and the agreed-upon rate is calculated.  It is applicable for a forex forward transaction.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fixing_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseQuantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardSaleRequestObject">

		<xs:sequence>

			<xs:element name="autoClosing" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_auto_closing_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="fixingDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The fixing date is the date at which the difference between the prevailing spot market rate and the agreed-upon rate is calculated.  It is applicable for a forex forward transaction.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fixing_d - Datatype : date_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldQuantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardCancelPurchaseObject">

		<xs:sequence>

			<xs:element name="autoClosing" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_auto_closing_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_old_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseQuantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardCancelSaleObject">

		<xs:sequence>

			<xs:element name="autoClosing" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_auto_closing_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_old_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseQuantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardPurchaseCancellationAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : notepad</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardSaleCancellationAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardContract" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="forwardExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates investment unit quote of the instrument. To obtain the price corresponding to this quote, which corresponds to the way the instrument is 'quoted' by the markets, the conversion corresponding to the 'price calculation rule' specified in the operation has to be applied.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : notepad</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyCurrentAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchaseCcyNetAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Net amount debited of a 'cash account', expressed in the account currency (i.e. the reference currency of the 'cash account instrument' which is credited/debited). 
The computation of this amount depends on the nature of the operation. The computation details may be found for the corresponding fileds in each operation.

Please note that, if this amount is provided by the user, it is not checked whether this amount is consistent with the preceding computation, taking into account the possibly provided exchange rates. It implies that the exchange rates, if provided, are stored in the operation with an information purpose. All the computations, particularly in the fusion process, are always based the comparison of the amounts.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_net_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="purchasedCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="settlementDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCcyCurrentAccountCcyPortfolioCcyExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Exchange Rate between the Instrument Currency and the Portfolio Currency. This exchange rate is expressed as the unit ratio between the Portfolio Net Amount and the Instrument Net Amount. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fi_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the second cash account.
This information is present for control purpose. If it is specified, the currency must correspond to the one which is reference as the 'reference currency' of the 'cash account 2' instrument. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc2_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="soldQuantity" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="spotExchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'Currency Forward', what the spot 'quote' (i.e. the spot exchange rate) is on operation date.
This information is useful to value the resulting forward position because it allows to know the premium/discount factor at that moment as well as for computing 'interest rate effect' when closing the positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  spot_quote_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="startingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="ForwardCancelOkObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="DepositF2BTransaction">

		<xs:choice>

			<xs:element name="OrderLifeCycle">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="openAcknowledgment" type="depositAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="closingAcknowledgment" type="depositClosingAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="closingRequest" type="DepositClosingRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="capitalDecrease" type="DepositCapitalDecreaseObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="capitalIncrease" type="DepositCapitalIncreaseObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="rateChange" type="DepositRateChangeObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="openRequest" type="DepositRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="renewal" type="DepositRenewalObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

			<xs:element name="Cancellation">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="Acknowledgment" type="depositCancelAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="cancelOk" type="depositCancelOkObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="cancelRequest" type="DepositCancelRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

		</xs:choice>

	</xs:complexType>
	<xs:complexType name="DepositRequestObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractLength" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used in conjunction with the contract length unit (contract_lenght_unit_e) to define the lenght of a money market, loan, or a forex forward.

Illustration: For a 3 months money market, stores "3" in contract_lenght_n and "month(s)" in contract_lenght_unit_e.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_length_n - Datatype : int_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractLengthUnit" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used in conjunction with the contract length (contract_lenght_n) to define the lenght of a money market, loan, or a forex forward.

Illustration: For a 3 months money market, stores "3" in contract_lenght_n and "month(s)" in contract_lenght_unit_e.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:unsignedByte">

						<xs:enumeration value="0">

							<xs:annotation>

								<xs:documentation>None</xs:documentation>

							</xs:annotation>

						</xs:enumeration>

						<xs:enumeration value="1">

							<xs:annotation>

								<xs:documentation>Day(s)</xs:documentation>

							</xs:annotation>

						</xs:enumeration>

						<xs:enumeration value="2">

							<xs:annotation>

								<xs:documentation>Weeks(s)</xs:documentation>

							</xs:annotation>

						</xs:enumeration>

						<xs:enumeration value="3">

							<xs:annotation>

								<xs:documentation>Month(s)</xs:documentation>

							</xs:annotation>

						</xs:enumeration>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark1" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark1_c - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark2" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark2_c - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark3" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark3_c - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the contract is renewed, this field indicates the amount of capital for the new contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the final date at which the client plans to continue renewing a money market contract.

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days until this date is reached.

No calculations are based on this field in TA. It is for informational purposes only.




</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field contains a specific interest rate which is to be applied to a contract upon renewal.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how a money market contract should be treated at expiration (whether or not it should be rolled-over and with which conditions).

Permitted Values:
1=None - The contract should not be rolled-over
2=Automatic - The contract may be rolled-over using the conditions described
3=Manual - The contract may be rolled-over, but the conditions must all be entered manually.

Note that currently no calculations or processing is done based on this field; it is for informational purposes only.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unit length of the term of each renewal of a money market contract. 

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

Permitted values:
1=Day
2=Week
3=Month

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a money market contract is to be rolled-over, this field indicates what the principal of the new contract should be.

Permitted Values:
0 = None
1 = Capital Only - the principal of the new contract should have the same face value as the original contract.
2 = Capital and Interest - the face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="DepositClosingRequestObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark1" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark1_c - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark2" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark2_c - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark3" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark3_c - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="DepositRateChangeObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the contract is renewed, this field indicates the amount of capital for the new contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the final date at which the client plans to continue renewing a money market contract.

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days until this date is reached.

No calculations are based on this field in TA. It is for informational purposes only.




</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field contains a specific interest rate which is to be applied to a contract upon renewal.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how a money market contract should be treated at expiration (whether or not it should be rolled-over and with which conditions).

Permitted Values:
1=None - The contract should not be rolled-over
2=Automatic - The contract may be rolled-over using the conditions described
3=Manual - The contract may be rolled-over, but the conditions must all be entered manually.

Note that currently no calculations or processing is done based on this field; it is for informational purposes only.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unit length of the term of each renewal of a money market contract. 

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

Permitted values:
1=Day
2=Week
3=Month

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a money market contract is to be rolled-over, this field indicates what the principal of the new contract should be.

Permitted Values:
0 = None
1 = Capital Only - the principal of the new contract should have the same face value as the original contract.
2 = Capital and Interest - the face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="DepositCapitalIncreaseObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCapitalIncrease" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Increase
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Interest rate
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Expiration date for money market
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
 None.  The contract should not be rolled-over.
1. Automatic
 Automatic. The contract may be rolled-over using the conditions described.

2. Manual
 Manual. The contract may be rolled-over, but the conditions must all be entered manually.


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
 None.
1. Capital Only
Capital Only.
The principal of the new contract should have the same face value as the original contract.
2. Capital and Interest
Capital and Interest.
The face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="DepositCapitalDecreaseObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCapitalDecrease" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Decrease
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Interest rate
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Expiration date for money market
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
 None.  The contract should not be rolled-over.
1. Automatic
 Automatic. The contract may be rolled-over using the conditions described.

2. Manual
 Manual. The contract may be rolled-over, but the conditions must all be entered manually.


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
 None.
1. Capital Only
Capital Only.
The principal of the new contract should have the same face value as the original contract.
2. Capital and Interest
Capital and Interest.
The face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="DepositRenewalObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositAmountChange" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="incDecreaseIndicator" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Nature of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the contract is renewed, this field indicates the amount of capital for the new contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the final date at which the client plans to continue renewing a money market contract.

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days until this date is reached.

No calculations are based on this field in TA. It is for informational purposes only.




</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field contains a specific interest rate which is to be applied to a contract upon renewal.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how a money market contract should be treated at expiration (whether or not it should be rolled-over and with which conditions).

Permitted Values:
1=None - The contract should not be rolled-over
2=Automatic - The contract may be rolled-over using the conditions described
3=Manual - The contract may be rolled-over, but the conditions must all be entered manually.

Note that currently no calculations or processing is done based on this field; it is for informational purposes only.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unit length of the term of each renewal of a money market contract. 

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

Permitted values:
1=Day
2=Week
3=Month

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a money market contract is to be rolled-over, this field indicates what the principal of the new contract should be.

Permitted Values:
0 = None
1 = Capital Only - the principal of the new contract should have the same face value as the original contract.
2 = Capital and Interest - the face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="depositAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : notepad</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="DepositCancelRequestObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="depositInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_old_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="depositCancelAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="depositCancelOkObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="depositClosingAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="deposit" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the deposit of the instrument position which is bought.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  deposit_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LoanF2BTransaction">

		<xs:choice>

			<xs:element name="OrderLifeCycle">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="openAcknowledgment" type="loanAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="closingAcknowledgment" type="loanClosingAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="closingRequest" type="LoanClosingRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="capitalDecrease" type="LoanCapitalDecreaseObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="capitalIncrease" type="LoanCapitalIncreaseObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="rateChange" type="LoanRateChangeObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="openRequest" type="LoanRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="renewal" type="LoanRenewalObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

			<xs:element name="Cancellation">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="Acknowledgment" type="loanCancelAcknowledgmentObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="cancelOk" type="loanCancelOkObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="cancelRequest" type="LoanCancelRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

		</xs:choice>

	</xs:complexType>
	<xs:complexType name="LoanRequestObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the contract is renewed, this field indicates the amount of capital for the new contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the final date at which the client plans to continue renewing a money market contract.

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days until this date is reached.

No calculations are based on this field in TA. It is for informational purposes only.




</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field contains a specific interest rate which is to be applied to a contract upon renewal.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how a money market contract should be treated at expiration (whether or not it should be rolled-over and with which conditions).

Permitted Values:
1=None - The contract should not be rolled-over
2=Automatic - The contract may be rolled-over using the conditions described
3=Manual - The contract may be rolled-over, but the conditions must all be entered manually.

Note that currently no calculations or processing is done based on this field; it is for informational purposes only.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unit length of the term of each renewal of a money market contract. 

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

Permitted values:
1=Day
2=Week
3=Month

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a money market contract is to be rolled-over, this field indicates what the principal of the new contract should be.

Permitted Values:
0 = None
1 = Capital Only - the principal of the new contract should have the same face value as the original contract.
2 = Capital and Interest - the face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LoanClosingRequestObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LoanRateChangeObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the contract is renewed, this field indicates the amount of capital for the new contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the final date at which the client plans to continue renewing a money market contract.

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days until this date is reached.

No calculations are based on this field in TA. It is for informational purposes only.




</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field contains a specific interest rate which is to be applied to a contract upon renewal.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how a money market contract should be treated at expiration (whether or not it should be rolled-over and with which conditions).

Permitted Values:
1=None - The contract should not be rolled-over
2=Automatic - The contract may be rolled-over using the conditions described
3=Manual - The contract may be rolled-over, but the conditions must all be entered manually.

Note that currently no calculations or processing is done based on this field; it is for informational purposes only.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unit length of the term of each renewal of a money market contract. 

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

Permitted values:
1=Day
2=Week
3=Month

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a money market contract is to be rolled-over, this field indicates what the principal of the new contract should be.

Permitted Values:
0 = None
1 = Capital Only - the principal of the new contract should have the same face value as the original contract.
2 = Capital and Interest - the face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LoanCapitalIncreaseObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCapitalIncrease" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Increase</xs:appinfo>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Expiration date for money market</xs:appinfo>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the contract is renewed, this field indicates the amount of capital for the new contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the final date at which the client plans to continue renewing a money market contract.

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days until this date is reached.

No calculations are based on this field in TA. It is for informational purposes only.




</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field contains a specific interest rate which is to be applied to a contract upon renewal.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
 None.  The contract should not be rolled-over.
1. Automatic
 Automatic. The contract may be rolled-over using the conditions described.

2. Manual
 Manual. The contract may be rolled-over, but the conditions must all be entered manually.


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a money market contract is to be rolled-over, this field indicates what the principal of the new contract should be.

Permitted Values:
0 = None
1 = Capital Only - the principal of the new contract should have the same face value as the original contract.
2 = Capital and Interest - the face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LoanCapitalDecreaseObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCapitalDecrease" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Decrease
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Expiration date for money market
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
 None.  The contract should not be rolled-over.
1. Automatic
 Automatic. The contract may be rolled-over using the conditions described.

2. Manual
 Manual. The contract may be rolled-over, but the conditions must all be entered manually.


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unit length of the term of each renewal of a money market contract. 

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

Permitted values:
1=Day
2=Week
3=Month

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>0.  None 
 None.
1. Capital Only
Capital Only.
The principal of the new contract should have the same face value as the original contract.
2. Capital and Interest
Capital and Interest.
The face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LoanRenewalObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanAmountChange" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="incDecreaseIndicator" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Nature of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  nature_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalAmount" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the contract is renewed, this field indicates the amount of capital for the new contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_amount_m - Datatype : amount_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalEndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the final date at which the client plans to continue renewing a money market contract.

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days until this date is reached.

No calculations are based on this field in TA. It is for informational purposes only.




</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_end_val_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field contains a specific interest rate which is to be applied to a contract upon renewal.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_int_rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalMode" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates how a money market contract should be treated at expiration (whether or not it should be rolled-over and with which conditions).

Permitted Values:
1=None - The contract should not be rolled-over
2=Automatic - The contract may be rolled-over using the conditions described
3=Manual - The contract may be rolled-over, but the conditions must all be entered manually.

Note that currently no calculations or processing is done based on this field; it is for informational purposes only.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  auto_renewal_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_ref_nat_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriod" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The length of the term of each renewal of a money market contract. 
For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalPeriodNumber" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unit length of the term of each renewal of a money market contract. 

For example, the client may specify to create an initial money market contract with a term of six months. The bank should then renew the contract for a term of 14 days.

Permitted values:
1=Day
2=Week
3=Month

No calculations are based on this field in TA. It is for informational purposes only.
</xs:documentation>
					<xs:documentation>0.  None 
1. Day
2. Week
3. Month

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_length_unit_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_renewal_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="renewalTreatment" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a money market contract is to be rolled-over, this field indicates what the principal of the new contract should be.

Permitted Values:
0 = None
1 = Capital Only - the principal of the new contract should have the same face value as the original contract.
2 = Capital and Interest - the face value of the new contract should be equivalent to the sum of both the principal of the original contact and the interest that was paid on the original contract.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  renewal_treatment_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="source" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="loanAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : notepad</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="LoanCancelRequestObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterparty" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'counterparty' with whom the operation has been concluded.
This information may be usful in case of OTC transaction. 
This reference must point to an occurrence in the 'third party' table.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterparty_third_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanAmount" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the operation. This is the currency in which the 'quote' is expressed.
Note that this currency may be different from the 'instrument' currency.  

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanInterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates, for operations on generic 'money market' instruments, the interest rate which has to be applied on the resulting position.
This information is used when computing accrued interest on these position, or when forecasting/generating income cash flows on these positions.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  rate_p - Datatype : percent_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates for position in generic 'money market' instrument the expiration date of the position.
This date is used in the 'Cash   Liquidity' module, as well as in the 'Automatic Expiration' module.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  expiration_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : event - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ud_old_status_e - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the sub-type of an operation. The sub-types can be defined on site, through the 'type' table.
Note that there are two restrictions on the sub-types that can be referenced in an operation: 
1. The 'oper_nat_e' of the sub-type must be the same as the 'nature_e' of the operation. In this particular case, the type must have an 'investment' 'oper_nat_e'.
2. The 'parent type' of the referenced 'sub-type' must be the same as the 'type' of the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  subtype_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="loanCancelAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldStatus" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="loanCancelOkObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="referenceNature" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information indicates the reference nature of the operation.
This information is used in the fusion process for several cases where it is important to reference another operation/position when deciding to merge/close positions together.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_nat_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="loanClosingAcknowledgmentObject">

		<xs:sequence>

			<xs:element name="boReference" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Complementary operation identifier, mainly for accounting purpose or comparison with a back-office system.
There is no 'uniqueness' constraint on that field on database level. This information may be used for documentary purpose.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  accounting_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="cashPortfolio" type="CashPortfolioObject" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closingpmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference of the position/operation to merge/close with.
This information is useful if the user wants, in some particular cases (see the comment on 'Reference Nature' for more details on these cases), to have a control on the processing of related position by the fusion process.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  ref_oper_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="contractNumber" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field may be used to assign a specific contract number to a money market contract. This contract bumber is separate from the operation identifyer.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  contract_number_c - Datatype : shortinfo_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="loan" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the instrument which is moved. Any nature of instrument may be referenced.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="fusionRule" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is reserved for the management of money markets/cash accounts positions with amendments, both on the invested capital and on interest rate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  fusion_rule_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="pmsReferenceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="CashPortfolioObject">

		<xs:sequence>

			<xs:element name="portfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the 'Cash Portfolio' of the operation.
If the cash account(s) of an operation is debited/credited in the same portfolio as the one of the security, this field is set to NULL.
In the other case, the referenced portfolio is different from the 'main' portfolio of the operation.
The only operation natures where this field may be diffrerent from NULL are those were cash movements can be generated (buy, sell, investment, withdrawal, income, ft, adjustment).

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="currency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash portfolio, if the latter is provided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_pf_curr_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="exchangeRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the Exchange Rate between the  Portfolio Reference Currency and the Reference Currency of the Cash Portfolio on which the various cash accounts are debited/credited.
This information is useful only if the 'Cash Portfolio' ('cash_portfolio_id') is different from NULL and from the main portfolio of the operation, whch means that the cash counterpart of the operation is debited/credited in a portfolio different from the portfolio of the operation.
This is possible only for the operation where there is possibility to debit/credit a cash account (buy, sell, income,...). 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  cash_pf_exch_rate - Datatype : exchange_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="CashInvestmentRequestObject">

		<xs:sequence>

			<xs:element name="account" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to a 'cash account' (i.e. an 'instrument' of the 'cash account' nature) that is debited.
This information is mandatory if the 'account net amount' is different from NULL and different from 0.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the currency of the cash account.
This information is present for control purpose. If it has been specified, the currency must correspond to the one which is referenced as the 'reference currency' of the 'cash account instrument' the operation. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  acc_currency_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterpartAccount" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Account where the investment, withdrawal or free deposit must be transferred to. This attribute is not a link to the instrument entity in order to support account not present in FOPM but available in the back-office.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterpart_account_c - Datatype : uni_note_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterpartCcy" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterpart_ccy - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="extBankBIC" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>BIC Identifier of the external bank.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  external_bank_bic_c - Datatype : name_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="extBankOwnerName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the account owner at the external bank.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  external_bank_acct_ownr_name - Datatype : name_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="mainBusinessEntity" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When a subscription is defined to send business_entity information, this field is set according to a certain definition.

Refer to the definition of the business_entity_selection_e attribute from the subscription table.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  business_entity_cd - Datatype : code_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="notepad" type="infra:Notepad" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo>Entity : notepad</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderMode" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order mode. (Standard, Confirmation, Direct)


</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  order_mode_type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_type_id - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="CashSellRequestObject">

		<xs:sequence>

			<xs:element name="accountingDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date on which the operation was entered into the books of the institution or an order was decided.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bo_account - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boCashAccount" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bo_cash_acct - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="boPortfolio" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  bo_ptf code_t - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="counterpartCcy" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterpart_ccy - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditAccount" type="infra:Identifier">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  account - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditAccountCurrency" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  op_currency - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="debitAccount" type="infra:Identifier">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  instr - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="debitCcy" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  counterpart_ccy - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatedBy" type="xs:unsignedByte" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field indicates the source of an order. When this field is used, it is possible to distinguish between operations that were initiated by a client and those that where initiated due to the portfolio being managed as part of a specific mandate.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  client_init_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiationDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This information is used to know the exact moment of the creation of an operation. It can be used to implement some "business" rules (e.g. in a mutual fund, an operation cannot be created at a date different from the Accounting Date) or for  communication to external systems (e.g. EBS).
This field  may be generated automaticall by the system or coming from outside.
This field is mandatory and computed by the system.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  creation_time_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the user who entered the operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  input_user_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderStatus" type="xs:unsignedByte">
				<xs:annotation>
					<xs:documentation>Status of the operation.
It allows to distinguish between various stages in the processing of an operation, from a simulation purpose to an accounted operation, passing through the various order states.
The use of states allows to describe the life cycle of operations in financial institutions. The number of states and their meaning depend on the internal organisation characterising each of them.
There are special types of states that have a specific meaning:
-   The "Accounting" Status, which makes the distinction between orders, and  the accounted positions. This particular status can be parametrised at system level.
-   The "Simulation" Status, which distinguishes between simulated orders and accounted positions. This particular status can be parametrised at system level.
-   The "Cancel" Status, which allows to keep trace of cancelled operations. This type of status can be parametrised at system level.

As explained in the chapter named "The Fusion Process", positions with different states never merge together.
If the user modifies the status of a position by updating it, no history will be kept.
This field is mandatory.
</xs:documentation>
					<xs:documentation>0. Cancelled
Orders/Operation cancelled.
5. Expired
Orders reaching validity date defined for the execution.
10. Validation Rejected
Orders rejected during 4-Eyes validation process.
15. Rejected
Orders rejected during order execution process.
20. Simulation
Orders created for simulation purpose.
25. To Validate
Orders requesting to be processed through a 4-Eyes Validation.
30. To Group
Valid orders allowed for grouping.
35. To Send
Valid orders ready to be sent to Order Management / Back Office systems for execution processing.
40. Sent
Status of orders sent by WealthSuite Front Office - Portfolio Management to the Order Management / Back Office systems for execution processing.
45. Received
Status of orders received by the Order Management / Back Office systems for execution processing.
50. Cancellation To Send
Request to cancel order execution to send to the Order Management / Back Office systems for execution cancellation processing.
55. Cancellation Sent
Request to cancel order execution sent to the Order Management / Back Office systems for execution cancellation processing.
60. Cancellation Received
Request to cancel order execution received by the Order Management / Back Office systems for execution cancellation processing.
65. Cancellation Placed
Processing of the cancel order execution.
70. Placed
Processing of the execution of order.
75. Partially Executed
Order partially executed.
80. Executed
Order executed.
85. External Position
Status for position managed outside the bank.
90. Accounted
Operation accounted.
95. Post Accounted
Statuses applied for post-accounting.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  status_e - Datatype : enum_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerBusinessEntity">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  owner_business_entity_id - Datatype : </xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="60"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="pmsReferenceCode">
				<xs:annotation>
					<xs:documentation>Unique 'business' identifier of an operation.
This code, combined with the 'status' and a sequence number, constitutes the unique key of an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN">

						<xs:maxLength value="255"/>

					</xs:restriction>

				</xs:simpleType>

			</xs:element>

			<xs:element name="portfolio" type="infra:Identifier">
				<xs:annotation>
					<xs:documentation>Reference to the portfolio to which the operation belongs.
This information is mandatory.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  portfolio_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="portfolioManager" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the manager who is at the origin of the operation. This reference may be NULL.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Quantity of the 'instrument' that is bought.
This quantity is a 'displayed' quantity, which has to be mutiplied by the 'instrument contract size' to find the real  quantity applied to the unit income to give the resulting 'operation gross amount'. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  quantity_n - Datatype : number_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="remark" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Field reserved for unstructured comment associated to an operation. The size of these comments is limited to 80 characters.
Another possiblity to associate such comments is to create notepads associated to an operation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  remark_c - Datatype : info_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="sourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For Back-To-Front operations :
Reference to an operation identifier external to Triple'A. This field allows to establish a correspondency between operations as they are stored in Triple'A and, as they are idenfied in external system, without the constraint of being unique that characterises the Triple'A 'code'.

For Front-To-Back orders: 
From Triple'A R3.51 on, this field can reference to the executed order. Please refer to the Order   Productivity Guide for more information about order execution and how to use this field.





</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  source_code - Datatype : code_t</xs:appinfo>
				</xs:annotation>

				<xs:simpleType>

					<xs:restriction base="xs:NMTOKEN"/>

				</xs:simpleType>

			</xs:element>

			<xs:element name="subType" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>Entity : ext_operation - Attribute :  sub_type_id - Datatype : </xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="trader" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When an order is first sent by telephone, the user may enter the trader who handled the operation.
</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  trader_manager_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Date on which a transaction was agreed or an order was decided. Financial risk exists as of this date. 

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  operation_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="infra:Identifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the type of an operation. The types can be defined on site, through the 'type' table.
Note that there is a restriction on the types that can be referenced in an operation. The oper_nat_e attribute of the type must be the same as the nature_e of the operation. In this particular case, the type must have an 'investment' oper_nat_e.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  type_id - Datatype : id_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Value day for accrued interest calculation.

</xs:documentation>
					<xs:appinfo>Entity : ext_operation - Attribute :  value_d - Datatype : datetime_t</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="userDefinedField" type="infra:UserDefinedField" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mbFields" type="infra:mbFields" minOccurs="0">
				<xs:annotation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>

	</xs:complexType>
	<xs:complexType name="CashF2BTransaction">

		<xs:choice>

			<xs:element name="OrderLifeCycle">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="InvestmentRequest" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WithdrawalRequest" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SellRequest" type="CashSellRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InvestmentRequestAcknowledgment" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WithdrawalRequestAcknowledgment" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

			<xs:element name="Cancellation">
				<xs:annotation>
				</xs:annotation>

				<xs:complexType>

					<xs:choice>

						<xs:element name="InvestmentRequest" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WithdrawalRequest" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SellRequest" type="CashSellRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InvestmentRequestAcknowledgment" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WithdrawalRequestAcknowledgment" type="CashInvestmentRequestObject">
							<xs:annotation>
							</xs:annotation>
						</xs:element>
					</xs:choice>

				</xs:complexType>

			</xs:element>

		</xs:choice>

	</xs:complexType>
</xs:schema>
